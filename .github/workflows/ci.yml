name: Docker build to trigger manually based on workflow dispatch

env:
  SERVICE_NAME: monocler-app  # Update the service name to reflect your app's name
  PROJECT_ID: dev-hachiai  # Keep the project ID or update it if necessary
  REPO_NAME: monocler-repo  # Update the repository name to the new GCR repository name
  
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: true
        default: 'main'
      tag:
        description: 'Docker image tag (e.g., version, commit SHA, etc.)'
        required: true
        default: 'latest'

  push:
    branches:
      - 'feature/newRelic-Logs'  # Trigger on pushes to this specific branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}  # This will work for workflow_dispatch input
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Use the Node.js version that matches your app

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Authenticate Docker with Google Artifact Registry
        run: gcloud --quiet auth configure-docker

      - name: Prepare environment variables
        run: echo "IMAGE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

      - name: Build and tag Docker image
        run: |
          docker build --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}:$IMAGE_TAG .

      - name: Push Docker image
        run: |
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}:$IMAGE_TAG

      - name: Tag and push 'latest' image
        if: ${{ github.event.inputs.tag != 'latest' }}
        run: |
          docker tag gcr.io/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}:$IMAGE_TAG gcr.io/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}:latest
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}:latest
